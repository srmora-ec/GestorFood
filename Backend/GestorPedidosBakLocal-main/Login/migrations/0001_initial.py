# Generated by Django 5.1.4 on 2025-01-07 02:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Ubicaciones', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ubicaciones',
            fields=[
                ('id_ubicacion', models.AutoField(primary_key=True, serialize=False)),
                ('latitud', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitud', models.DecimalField(decimal_places=6, max_digits=9)),
                ('udescripcion', models.CharField(blank=True, max_length=500, null=True)),
                ('sestado', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ubicaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_cuenta', models.AutoField(primary_key=True, serialize=False)),
                ('fechacreacion', models.DateTimeField(auto_now_add=True)),
                ('fechafin', models.DateTimeField(blank=True, null=True)),
                ('observacion', models.CharField(blank=True, max_length=500, null=True)),
                ('fotoperfil', models.BinaryField(blank=True, null=True)),
                ('estadocuenta', models.CharField(choices=[('0', '0'), ('1', '1')], default='1', max_length=1)),
                ('rol', models.CharField(choices=[('A', 'A'), ('C', 'C'), ('X', 'X'), ('M', 'M'), ('D', 'D')], max_length=1)),
                ('correorecuperacion', models.CharField(blank=True, max_length=256, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'cuenta',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('crazon_social', models.CharField(blank=True, max_length=300, null=True)),
                ('ctelefono', models.CharField(max_length=300)),
                ('tipocliente', models.CharField(choices=[('04', '04'), ('05', '05'), ('06', '06'), ('07', '07'), ('08', '08')], max_length=2, null=True)),
                ('cregistro', models.DateTimeField(auto_now_add=True)),
                ('snombre', models.CharField(blank=True, max_length=300, null=True)),
                ('capellido', models.CharField(blank=True, max_length=300, null=True)),
                ('cpuntos', models.DecimalField(decimal_places=0, default=0, max_digits=3)),
                ('ruc_cedula', models.CharField(blank=True, max_length=300, null=True)),
                ('ccorreo_electronico', models.CharField(blank=True, max_length=300, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=300, null=True)),
                ('sestado', models.CharField(max_length=1)),
                ('id_ubicacion1', models.ForeignKey(blank=True, db_column='id_ubicacion1', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ubicacion1', to='Ubicaciones.ubicaciones')),
                ('id_ubicacion2', models.ForeignKey(blank=True, db_column='id_ubicacion2', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ubicacion2', to='Ubicaciones.ubicaciones')),
                ('id_ubicacion3', models.ForeignKey(blank=True, db_column='id_ubicacion3', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ubicacion3', to='Ubicaciones.ubicaciones')),
                ('id_cuenta', models.ForeignKey(db_column='id_cuenta', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'clientes',
                'managed': True,
            },
        ),
    ]
